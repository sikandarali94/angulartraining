/* Angular adds a strange attribute like _ngcontent-c2 so it can enforce
style encapsulation to isolate elements of a component. In other words
it simply gives the same attribute like _ngcontent-c2 to all elements
in a component so it can enforce style encapsulation so that style sheets
of components only get applied to those elements of the component and not
to elements outside it. It does this for each component with different
unique attribute names. And with that it can make sure that once it changed
our style selector it automatically adds an attribute selector to all our
styles defined for a component that these styles get only applied to elements
of that component. So in other words if we have:
p {
    color: blue;
}
It changes this selector to:
p [_ngcontent-c2] {

}
Since _ngcontent-c2 attribute is added to all those elements in our component
this style will be applied only to those elements in our component.
This behaviour kind of emulates the shadow DOM. The shadow DOM is a technology
not supported by old browsers where each element has its kind of own shadow
DOM behind it where we then could add styles to each element. But since this
behaviour is not supported by old browsers this is how Angular emulates it to
make sure it works on old browsers. And thus this is the default behaviour of
view encapsulation in Angular.
 */
p {
    color: blue;
}

/* Because we have stopped View Encapsulation for server-element component the
styles in this stylesheet will be added globally.
 */
label {
    color: red;
}